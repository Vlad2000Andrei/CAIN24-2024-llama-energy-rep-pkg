# Combine the plots into subplots using patchwork
combined_plots <- plot_cn + plot_sr + plot_ts
# Display the combined plots
combined_plots
# Create the ggplot visualizations
plot_cn <- ggplot(data = rq1 %>% filter(algorithm == "CN"), aes(x = language, y = change[, "mean"])) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage") +
scale_fill_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green"))
plot_sr <- ggplot(data = rq1 %>% filter(algorithm == "SR"), aes(x = language, y = change[, "mean"])) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage")+
scale_fill_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green"))
plot_ts <- ggplot(data = rq1 %>% filter(algorithm == "TS"), aes(x = language, y = change[, "mean"])) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage")+
scale_fill_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green"))
# Combine the plots into subplots using patchwork
combined_plots <- plot_cn + plot_sr + plot_ts
# Display the combined plots
combined_plots
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
# Display the combined plots
combined_plots
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
# Display the combined plots
combined_plots
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
# Display the combined plots
combined_plots
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
# Display the combined plots
combined_plots
plot_cn <- ggplot(data = rq1 %>% filter(algorithm == "CN"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5))
plot_sr <- ggplot(data = rq1 %>% filter(algorithm == "SR"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5))
plot_ts <- ggplot(data = rq1 %>% filter(algorithm == "TS"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5))
# Combine the plots into subplots using patchwork
combined_plots <- plot_cn + plot_sr + plot_ts
# Display the combined plots
combined_plots
plot_cn
plot_cn <- ggplot(data = rq1 %>% filter(algorithm == "CN"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(title = "Relative Change CN", x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5))
plot_sr <- ggplot(data = rq1 %>% filter(algorithm == "SR"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(title = "Relative Change SR", x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5))
plot_ts <- ggplot(data = rq1 %>% filter(algorithm == "TS"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(title = "Relative Change TS", x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5))
plot_cn
plot_cn <- ggplot(data = rq1 %>% filter(algorithm == "CN"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5)) +
ggtitle("Difference Human vs. Llama for CN")
plot_cn
plot_cn <- ggplot(data = rq1 %>% filter(algorithm == "CN"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5)) +
ggtitle("Difference Human vs. Llama for CN")+
theme(plot.title = element_text(hjust = 0.5))
plot_cn
plot_sr <- ggplot(data = rq1 %>% filter(algorithm == "SR"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5))+
ggtitle("Difference Human vs. Llama for SR")+
theme(plot.title = element_text(hjust = 0.5))
plot_ts <- ggplot(data = rq1 %>% filter(algorithm == "TS"), aes(x = language, y = change[, "mean", drop = TRUE], fill = language)) +
geom_bar(stat = "identity", width = 0.5) + labs(x = "Language", y= "Change Percentage") +
geom_text(aes(label = paste(round(change[, "mean"], 2), "%"), vjust = -0.5), position = position_dodge(width = 0.5))+
ggtitle("Difference Human vs. Llama for TS")+
theme(plot.title = element_text(hjust = 0.5))
plot_cn
plot_sr
plot_ts
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
plot_cn <- plot_rq1("CN")
plot_cn
plot_cn <- plot_rq1("CN")
plot_ts <- plot_rq1("TS")
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
plot_cn
cn <- group_and_reshape("CN")
################### RQ2 ####################
group_and_reshape <- function(alg) {
algo_df <- llama %>% filter(algorithm == alg)
eff <- llama %>% filter(efficient == "True")
non_eff <- llama %>% filter(efficient == "False")
merged_data <- merge(eff, non_eff, by = "language")
}
cn <- group_and_reshape("CN")
View(cn)
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
View(cn)
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
View(cn)
View(plot_cn)
View(plot_ts)
View(rq1)
View(result)
View(llama)
ggplot(cn, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(cn, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 2) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
3
ggplot(cn, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
algo_df <- llama %>% filter(algorithm == alg)
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
rq2 <- group_and_reshape()
View(rq2)
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R")
View(rq2)
ggplot(cn, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
View(rq2)
ggplot(cn, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(rq2, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(rq2, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
)+
geom_text(aes(label = algorithm), hjust = 0.5, vjust = -0.5) +
theme_minimal()
ggplot(cn, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(sr, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
cn <- group_and_reshape("CN")
sr <- group_and_reshape("SR")
ts <- group_and_reshape("TS")
ggplot(cn, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(sr, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
################### RQ2 ####################
group_and_reshape <- function(alg) {
algo_df <- llama %>% filter(algorithm == alg)
eff <- algo_df %>% filter(efficient == "True")
non_eff <- algo_df %>% filter(efficient == "False")
merged_data <- merge(eff[, c("language", "temperature", "mean")], non_eff[, c("language", "temperature", "mean")], by = c("language", "temperature"))
}
cn <- group_and_reshape("CN")
sr <- group_and_reshape("SR")
ts <- group_and_reshape("TS")
ggplot(cn, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(sr, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(sr, aes(x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
cn <- group_and_reshape("CN")
View(rq1)
View(cn)
################### RQ3 ####################
plot_rq2 <- function(df) {
ggplot(df, aes(fill=temperature, y=mean_x, x=language)) +
geom_bar(position="dodge", stat="identity")
}
plot_rq2(cn)
View(cn)
ggplot(df, aes(fill=temperature, y=mean.x, x=language)) +
geom_bar(position="dodge", stat="identity")
################### RQ3 ####################
plot_rq2 <- function(df) {
ggplot(df, aes(fill=temperature, y=mean.x, x=language)) +
geom_bar(position="dodge", stat="identity")
}
plot_rq2(cn)
################### RQ3 ####################
plot_rq2 <- function(df) {
# Convert "temperature" to a factor
df$temperature <- factor(df$temperature)
# Create the bar plot with "temperature" as a categorical variable
ggplot(df, aes(fill = temperature, y = mean.x, x = language)) +
geom_bar(position = "dodge", stat = "identity")
}
plot_rq2(cn)
################### RQ3 ####################
plot_rq2 <- function(df) {
# Convert "temperature" to a factor
df$temperature <- factor(df$temperature)
# Create the bar plot with "temperature" as a categorical variable
ggplot(df, aes(fill = temperature, y = mean.x, x = language)) +
geom_bar(position = "dodge", stat = "identity") +
geom_text(aes(label = round(mean.x, 2), vjust = -0.5), position = position_dodge(width = 0.5)) +
ggtitle(paste("Temperature Differences for ", df))+
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(cn)
################### RQ3 ####################
plot_rq2 <- function(df, alg) {
# Convert "temperature" to a factor
df$temperature <- factor(df$temperature)
# Create the bar plot with "temperature" as a categorical variable
ggplot(df, aes(fill = temperature, y = mean.x, x = language)) +
geom_bar(position = "dodge", stat = "identity") +
geom_text(aes(label = round(mean.x, 2), vjust = -0.5), position = position_dodge(width = 0.5)) +
ggtitle(paste("Temperature Differences for ", alg))+
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(cn, "CN")
################### RQ3 ####################
plot_rq2 <- function(df, alg) {
# Convert "temperature" to a factor
df$temperature <- factor(df$temperature)
# Create the bar plot with "temperature" as a categorical variable
ggplot(df, aes(fill = temperature, y = mean.x, x = language)) +
geom_bar(position = "dodge", stat = "identity") +
geom_text(aes(label = round(mean.x, 2), vjust = -0.5), position = position_dodge(width = 0.9)) +
ggtitle(paste("Temperature Differences for ", alg))+
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(cn, "CN")
################### RQ3 ####################
plot_rq2 <- function(df, alg) {
df$temperature <- factor(df$temperature)
ggplot(df, aes(fill = temperature, y = mean.x, x = language)) +
geom_bar(position = "dodge", stat = "identity") +
geom_text(aes(label = round(mean.x, 2), vjust = -0.5), position = position_dodge(width = 0.9)) +
ggtitle(paste("Temperature Differences for ", alg))+
labs(x = "Language", y= "Mean Energy Consumption") +
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(cn, "CN")
plot_rq2(sr, "SR")
cn
plot_rq2(cn, "CN")
plot_rq2(sr, "SR")
plot_rq2(ts, "TS")
setwd("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis")
#ggplot(cn, aes(x = mean.x, y = mean.y)) +
#geom_point(color = "blue", size = 3) +
#labs(
# title = "Scatter Plot Example",
#x = "X-axis Label",
#y = "Y-axis Label"
#) +
#theme_minimal()
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R", echo=TRUE)
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R", echo=TRUE)
ggplot(cn, aes(fill= languageEl(), x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y)) +
geom_point(color = "blue", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y)) +
geom_point(color = "identity", size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y)) +
geom_point(size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y, color = colors)) +
geom_point(size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
) +
theme_minimal()
+scale_color_manual(values = c("CN" = "red", "SR" = "blue", "TS" = "green"))+
theme_minimal()
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
title = "Scatter Plot Example",
x = "X-axis Label",
y = "Y-axis Label"
)
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
title = "Scatter Plot Example",
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption"
)
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
title = "Scatter Plot Example",
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption"
)
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption"
)
+ ggtitle("Energy Efficient Prompt vs Not Energy Efficient Prompt")
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption"
)
ggplot(cn, aes(fill= language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption"
)
ggplot(cn, aes(fill = language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption",
title = "Energy Efficient Prompt vs Not Energy Efficient Prompt"
) +
scale_color_manual(values = c("CN" = "red", "SR" = "blue", "TS" = "green")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(cn, aes(fill = language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption",
title = "Energy Efficient Prompt vs Not Energy Efficient Prompt"
) +
scale_color_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
source("~/Documents/GitHub/GreenLab-Team-NoProbllama/R Data Analysis/graphs.R", echo=TRUE)
plot_rq2(cn)
plot_rq2(sr)
plot_rq2(sr)
plot_rq2 <- function(alg) {
ggplot(alg, aes(fill = language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Energy Efficient Prompt vs Not Energy Efficient Prompt",
y = "Efficient Prompt Energy Consumption",
title = "Llama Default Prompt vs Llama Energy Efficient Prompt"
) +
scale_color_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(sr)
plot_rq2 <- function(alg) {
ggplot(alg, aes(fill = language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption",
title = "Llama Default Prompt vs Llama Energy Efficient Prompt"
) +
scale_color_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(sr)
plot_rq2 <- function(alg) {
ggplot(alg, aes(fill = language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption (mJ)",
title = "Llama Default Prompt vs Llama Energy Efficient Prompt (mJ)"
) +
scale_color_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2 <- function(alg) {
ggplot(alg, aes(fill = language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption",
y = "Efficient Prompt Energy Consumption (mJ)",
title = "Llama Default Prompt vs Llama Energy Efficient Prompt (mJ)"
) +
scale_color_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(sr)
plot_rq2(ts)
plot_rq2 <- function(alg) {
ggplot(alg, aes(fill = language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption (mJ)",
y = "Efficient Prompt Energy Consumption (mJ)",
title = "Llama Default Prompt vs Llama Energy Efficient Prompt"
) +
scale_color_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(ts)
plot_rq2 <- function(alg, name) {
ggplot(alg, aes(fill = language, x = mean.x, y = mean.y, color = language)) +
geom_point(size = 3) +
labs(
x = "Normal Prompt Energy Consumption (mJ)",
y = "Efficient Prompt Energy Consumption (mJ)",
title = paste("Llama Default Prompt vs Llama Energy Efficient Prompt for ", name)
) +
scale_color_manual(values = c("C++" = "red", "JavaScript" = "blue", "Python" = "green")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
}
plot_rq2(ts, "TS")
